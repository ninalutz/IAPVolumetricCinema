// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

struct poltex_t
{
	float3 pos;
	float2 uv;
    int col;
};

RWStructuredBuffer<poltex_t> poltex_buffer;
StructuredBuffer<float3> verts;
StructuredBuffer<float2> uvs;

uniform float4 _transform_0;
uniform float4 _transform_1;
uniform float4 _transform_2;
uniform float4 _transform_3;

[numthreads(10,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	// Build transform
	float4x4 _transform = float4x4(_transform_0, _transform_1, _transform_2, _transform_3);

	// Link to specific value
	poltex_t v = poltex_buffer[id.x];

	// Transform position
	float4 in_v = float4(verts[id.x], 1.0);
	v.pos = mul(_transform, in_v).xyz;
	float t = v.pos.y;
	v.pos.y = v.pos.z;
	v.pos.z = -t;
	
	// Colour
	v.col = 0xffffffff;

	// UVs
	v.uv = uvs[id.x];

	// Reallocate
	poltex_buffer[id.x] = v;
}
